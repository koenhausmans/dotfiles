###
### Change the default prefix key for Tmux
###
# Screen like binding (remap prefix to Control + a)
set -g prefix C-a
unbind C-b
bind-key -n C-M-A send-prefix

###
### Change the default shell
###
set-option -g default-command "$SHELL"
set-option -g default-shell "$SHELL"

# Ring the bell if any background window rang a bell
set -g bell-action any

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal "screen-256color"

###
### Window Shortcuts
###
bind C-p previous-window
bind C-n next-window

bind c new-window -c "#{pane_current_path}"

###
### Split Shortcuts
###
bind  v split-window -h -p 50 -c "#{pane_current_path}"
bind ^V split-window -h -p 50 -c "#{pane_current_path}"
bind  s split-window -v -p 50 -c "#{pane_current_path}"
bind ^S split-window -v -p 50 -c "#{pane_current_path}"
bind  | split-window -h -c '#{pane_current_path}'
# bind  \ split-window -h -c '#{pane_current_path}'
bind  - split-window -v -c '#{pane_current_path}'
bind  _ split-window -v -c '#{pane_current_path}'

###
### Pane switch shortcuts
###
# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind -r h resize-pane -L 1
bind -r j resize-pane -D 1
bind -r k resize-pane -U 1
bind -r l resize-pane -R 1

# Smart pane switching with awareness of vim splits.
# Source: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1
set -g renumber-windows on

# Quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# Bigger history
set -g history-limit 10000

###
### Set default tmux theme
### Source: https://gist.github.com/gchiam/4606522f513cc64b79ce
###
#
# This tmux statusbar config was created based on gruvbox colorscheme
set  -g status "on"
set  -g status-justify "centre"
# set  -g pane-border-fg "colour238"
set  -g pane-border-style fg="colour238"
# set  -g pane-active-border-fg "colour109"
# set  -g pane-active-border-bg "colour109"
set  -g pane-active-border-style fg="colour109",bg="colour109"
set  -g status-bg "colour237"
set  -g status-style bg="colour237"
# set  -g message-fg "colour237"
# set  -g message-bg "colour109"
set  -g message-style fg="colour237",bg="colour109"
# set  -g message-command-fg "colour237"
# set  -g message-command-bg "colour248"
set  -g message-command-style fg="colour237",bg="colour248"
# setw -g window-status-fg "colour223"
# setw -g window-status-bg "colour239"
setw -g window-status-style fg="colour223",bg="colour239"
# setw -g window-status-current-fg "colour237"
# setw -g window-status-current-bg "colour109"
setw -g window-status-current-style fg="colour237",bg="colour109"
setw -g window-status-separator " "

set  -g status-left '#{?client_prefix,#[fg=colour16]#[bg=colour109],#[fg=colour16]#[bg=colour248]}#[bold] #S #[nobold]'
set  -g status-right "#[fg=colour246,bg=colour239] %Y-%m-%d │ wk %V │ %H:%M #[fg=colour237,bg=colour248] #h "
setw -g window-status-format " #I#{?window_flags,#{window_flags}, } │ #W "
setw -g window-status-current-format " #I#{?window_flags,#{window_flags}, } │ #[bold]#W#[nobold] "

###
### Local config
###
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'


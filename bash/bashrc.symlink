### ---------------------------------------------------------------------------
### General
### ---------------------------------------------------------------------------

# Source bash aliases
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# Source global definitions
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

shopt -s checkwinsize

set -o emacs

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

### ---------------------------------------------------------------------------
### Auto completion
### ---------------------------------------------------------------------------
shopt -s dotglob 2>/dev/null
shopt -s extglob 2>/dev/null
shopt -s globstar 2>/dev/null
shopt -s hostcomplete 2>/dev/null
shopt -s nocaseglob 2>/dev/null

# Load bash_completion (including git support)

[[ -f /etc/bash_completion ]] && . /etc/bash_completion
[[ -f /etc/bash_completion.d/git ]] && . /etc/bash_completion.d/git
[[ -f /usr/share/bash-completion/bash_completion ]] && . /usr/share/bash-completion/bash_completion

### ---------------------------------------------------------------------------
### Environment variables
### ---------------------------------------------------------------------------

if [[ $TERM == xterm ]] ; then
    TERM=xterm-256color
fi

export DOTFILES="$HOME/.dotfiles"

export PATH="$HOME/bin:$DOTFILES/bin:$HOME/.local/bin/:$PATH"

export VISUAL="vim"
export EDITOR="$VISUAL"

### ---------------------------------------------------------------------------
### Directories
### ---------------------------------------------------------------------------
shopt -s autocd 2>/dev/null
shopt -s cdspell 2>/dev/null
shopt -s cdable_vars 2>/dev/null
shopt -s dirspell 2>/dev/null

alias ls='ls --color=auto'

alias grep='grep --color=auto'

### ---------------------------------------------------------------------------
### Aliases
### ---------------------------------------------------------------------------

# Remove shortcuts
alias rr="rm -rf"

# Directory navigation aliases
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ......="cd ../../../../.."

alias -- -='cd -'

# Ls aliases
alias lsa='ls -lah'
alias l='ls -lh'
alias ll='ls -lh'
alias la='ls -lAh'

# Git alias
alias ga='git add'
alias gc='git commit'
alias gca='git commit -a'
alias gcam='git commit -a -m'
alias gcm='git commit -m'
alias gd='git diff'
alias gdc='git diff --cached'
alias gdt='git diff-tree --no-commit-id --name-only -r'
alias gl='git log --stat'
alias gpush='git push'
alias gpull='git pull --rebase'
alias gs='git status -sb'

# Output the week number
alias week="date +%V"

### ---------------------------------------------------------------------------
### Customization
### ---------------------------------------------------------------------------

[[ -f "$DOTFILES/bash/git_prompt.bash" ]] && . "$DOTFILES/bash/git_prompt.bash"

function _prompt_command {
    local _exit_status="$?"

    local _red="\[\e[01;31m\]"
    local _yellow="\[\e[01;33m\]"
    local _blue="\[\e[01;34m\]"
    local _rst="\[\e[0m\]"

    [[ -n "$SSH_CONNECTION" ]] && local _HOST="$_yellow\u@\h "
    local _GIT="$(_git_prompt)"

    PS1="$_HOST$_blue\w $_GIT"

    if [[ $_exit_status != 0 ]] ; then
        PS1+="${_red}\$${_rst} "
    else
        PS1+="${_blue}\$${_rst} "
    fi
}
PROMPT_COMMAND=_prompt_command

### ---------------------------------------------------------------------------
### History
### ---------------------------------------------------------------------------

set -o histexpand

shopt -s cmdhist
shopt -s histappend

HISTCONTROL=ignoreboth
HISTSIZE=1000
HISTFILESIZE=2000

### ---------------------------------------------------------------------------
### FZF Plugin
### ---------------------------------------------------------------------------

if [[ -d "$HOME/.fzf" ]] ;then
    export PATH="$PATH:$HOME/.fzf/bin"

    if [[ -x "$(command -v fzf)" && -d "$HOME/.fzf" ]] ; then
        export MANPATH="$MANPATH:$HOME/.fzf/man"

        FZF_TMUX=1
        [[ $- == *i* ]] && source "$HOME/.fzf/shell/completion.bash" 2> /dev/null

        source "$HOME/.fzf/shell/key-bindings.bash"
    fi
fi

### ---------------------------------------------------------------------------
### Z Plugin
### ---------------------------------------------------------------------------
load_z() {
    local Z_HOME="$HOME/.local/share/z/"
    [[ -f "$Z_HOME/z.sh" ]] && . $Z_HOME/z.sh
}
load_z

### ---------------------------------------------------------------------------
### Load machine-specific config files
### ---------------------------------------------------------------------------

# Customize to your needs...
if [[ -f $HOME/.bashrc.local ]]; then
    source $HOME/.bashrc.local
fi

